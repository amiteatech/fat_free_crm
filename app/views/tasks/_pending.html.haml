%li.highlight[pending]
  / - unless pending.category.blank?
  /   .strip{:class => pending.category}= t(pending.category)
  / - else
  /   .strip.white #{t :other}

  .tools
    = link_to_task_edit(pending, bucket) + " | "
    = link_to_discard(pending) + " | " if shown_on_landing_page?
    = link_to_task_delete(pending, bucket)
  
  .taskList
    %label{ :id => dom_id(pending, :name) }
      - if pending.user.id != current_user.id
        = t(:task_from, link_to(h(pending.user.full_name), user_path(pending.user))).html_safe << ':'
      = auto_link h(pending.name)
      - if pending.asset_id?
        =t :related
        = link_to(h(pending.asset.name), polymorphic_url(pending.asset))
      &ndash;
    %tt
      - if pending.bucket == "due_asap"
        %span.urgent= t(:task_due_now)
      - elsif pending.bucket == "due_later"
        = t(:task_due_later)

      - else
        - if pending.at_specific_time?
          - if pending.due_at < Time.now
            %span.warn= distance_of_time_in_words(pending.due_at, Time.now)
            = t(:task_overdue)
            = l(pending.due_at.localtime, :format => :mmddhhss)
          - else
            = t(:task_due_in, distance_of_time_in_words(Time.now, pending.due_at.localtime))
            = '(' << l(pending.due_at.localtime, :format => :mmddhhss) << ')'

        - else
          - if pending.due_at < Date.today
            %span.warn= distance_of_time_in_words(pending.due_at, Time.now)
            = t(:task_overdue)
            = l(pending.due_at.localtime.to_date, :format => :mmdd)
          - elsif pending.due_at > Date.today
            = t(:task_due_in, distance_of_time_in_words(Time.now, pending.due_at.localtime.end_of_day))
          - else
            %span.cool= t(:task_due_today)
    %div.taskForm
      = form_tag task_comment_task_path(pending), :method => :put, :remote => true do
        %div.taskStatus
          %span(class = "completed-task") 
            / = check_box_tag dom_id(pending, :complete), 1, false, :onclick => link_to_task_complete(pending, bucket)
            = radio_button_tag dom_id(pending, :complete), 1, false, :class => "complete_task_check"
            #{t :Completed}
          %span(class = "rejected-task") 
            / = check_box_tag dom_id(pending, :reject), 1, false, :onclick => link_to_task_reject(pending, bucket) 
            = radio_button_tag dom_id(pending, :complete), 0, false, :class => "reject_task_check"
            #{t :Rejected}
        %input{:type => "text", :name => "taskComment", :id => "task-#{pending.id}", :placeholder => "Write a comment", :class => "task_comment" }
        %input{:type => "hidden", :name => "bucket", :value => pending.bucket }
        = submit_tag "Save"
      .cl

      - if pending.file_uploads.present? && pending.file_uploads.count > 0
        %div.uploaded-files
          %ul
            - pending.file_uploads.each do |file|
              %li 
                / = link_to(file.file_name, show_files_path(:url => file.file), :target => "_blank")
                %span{ data: {url: "#{file.file}"}, class: "openpop" }
                  = file.file_name

      - if pending.task_comments.count > 0
        %div.comment-box
          %h3.color#as
            #{t "Comments"}
          %div      
            - pending.task_comments.each do |comment|
              %div.task-comment 
                %i.fa.fa-user-o
                %span.commentedBy
                  = comment.user_name 
                  #{t ":"}
                %span.commentedText
                  = comment.comments 
    - unless pending.background_info.blank?
      %div
        %dt= h(pending.background_info)
    .cl

/ .wrapper
/   .popup
/     %iframe{:src => "", :class => "popuptext"}
/       %p Your browser does not support iframes.
/     %a.close{:href => "#"} X

/ The Modal
#myModal.modal
  / Modal content
  .modal-content
    %span.close Ã—
    .wrapper
      .popup
        %iframe{:src => "", :class => "popuptext"}
          %p Your browser does not support iframes.


:javascript
  $(document).ready( function() {
     // Get the modal
    var modal = document.getElementById('myModal');

    // Get the button that opens the modal
    var btn = document.getElementsByClassName("openpop");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks on the button, open the modal 
    $(".openpop").on("click", function(e) {
      //e.preventDefault();
      $("iframe").attr("src", $(this).data('url')).attr("width", "100%").attr("height", "500px").addClass("show");
      modal.style.display = "block";
    });

    // When the user clicks on <span> (x), close the modal
    span.onclick = function() {
        modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
  });